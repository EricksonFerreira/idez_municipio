name: Laravel CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, xml, ctype, json, tokenizer, bcmath, fileinfo
        coverage: none
        tools: composer:v2
    
    - name: Copiando .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Verificando versão do Composer
      run: composer --version

    - name: Instalando as Dependências
      run: |
        composer self-update
        composer clear-cache
        composer install --no-ansi --no-interaction --prefer-dist --optimize-autoloader --no-progress
        
    - name: Gerando a Chave da Aplicação
      run: php artisan key:generate --ansi
      env:
        APP_ENV: testing
        
    - name: Verificando instalação
      run: |
        php -v
        composer show
    
    - name: Permissões do diretório
      run: chmod -R 777 storage bootstrap/cache
    
    - name: Criando o Banco de Dados e Usuário
      run: |
        # Criar o banco de dados
        mysql -h 127.0.0.1 -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS test_db;"
        # Criar o usuário e conceder permissões
        mysql -h 127.0.0.1 -u root -ppassword -e "CREATE USER IF NOT EXISTS 'test_user'@'%' IDENTIFIED BY 'password';"
        mysql -h 127.0.0.1 -u root -ppassword -e "GRANT ALL PRIVILEGES ON test_db.* TO 'test_user'@'%';"
        mysql -h 127.0.0.1 -u root -ppassword -e "FLUSH PRIVILEGES;"
    
    - name: Executando os Testes (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: test_db
        DB_USERNAME: test_user
        DB_PASSWORD: password
        DB_HOST: 127.0.0.1
        MUNICIPIOS_PROVIDER: "MOCK"
      run: |
        php artisan config:clear
        php artisan migrate:fresh --env=testing --force
        php artisan test
    
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success() && github.event_name == 'push'
